{"version":3,"sources":["src/app/Provider.js","src/components/GridItem.js","src/app/firebase.js","src/app/services/category.js","src/screens/Home.js","src/constants/colors.js","src/app/services/prods.js","src/screens/Breads.js","src/app/services/cart.js","src/screens/Details.js","src/app/services/api.js","src/stacks/index.js","src/app/services/orders.js","src/screens/Cart.js","src/screens/Edit.js","src/screens/Register.js","src/screens/Access.js","src/stacks/auth.js","src/tabs/index.js","src/navigation/index.js","App.js"],"names":["Provider","children","useState","items","state","setState","AppContext","value","createContext","GridItem","item","navigation","View","TouchableOpacity","onPress","navigate","Text","style","styles","title","StyleSheet","create","paddingBottom","marginTop","marginBottom","textAlign","color","backgroundColor","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","db","getFirestore","auth","getAuth","setPersistence","browserLocalPersistence","itemsCollection","collection","getArrayFromCollection","docs","map","doc","data","id","Home","prods","setProds","useEffect","a","async","getDocs","query","result","getItems","then","res","console","log","FlatList","renderItem","keyExtractor","COLORS","Breads","name","deleteItem","deleteDoc","Details","route","useContext","getDoc","getItemById","params","context","price","obj","addDoc","agregar","signUp","email","password","createUserWithEmailAndPassword","userCredential","user","setDoc","uid","signIn","signInWithEmailAndPassword","logout","signOut","Stack","createStackNavigator","Navigator","screenOptions","headerShown","headerStyle","headerTintColor","headerTitleStyle","fontWeight","headerRight","props","titleHeader","Screen","component","Cart","itemSelected","setItemSelected","modalVisible","setModalVisible","sumProds","suma","p","parseInt","Modal","visible","animationType","transparent","modalView","total","alert","r","width","height","borderRadius","alignContent","justifyContent","alignItems","marginLeft","marginRight","flexDirection","Edit","category","setCategory","setName","description","setDescription","weight","setWeight","setPrice","updateDoc","TextInput","placeholder","onChange","text","target","Register","setEmail","setPassword","input","onChangeText","boton","borderWidth","borderColor","padding","margin","Access","Tab","createBottomTabNavigator","options","tabBarShowLabel","tabBarStyle","tabBar","header","tabBarIcon","Ionicons","size","AntDesign","MaterialCommunityIcons","shadowColor","shadowOpacity","shadowOffset","elevation","position","bottom","left","right","paddingTop","Nav","isLogged","setIsLogged","onAuthStateChanged","NavigationContainer","App"],"mappings":"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","file":"static/js/app.13f1276e.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\nconst Provider = ({children}) => {\r\n    const [state, setState] = useState({items: []});\r\n    return (\r\n        <AppContext.Provider value={[state, setState]}>\r\n            {children}\r\n        </AppContext.Provider>\r\n        )\r\n}\r\n\r\nexport default Provider;\r\nexport const AppContext = createContext();","import React from 'react'\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native'\r\n\r\nconst GridItem = ({item, navigation}) => {\r\n  return (\r\n    <View>\r\n        <TouchableOpacity onPress={() => navigation.navigate('Breads')}>\r\n          <Text style={styles.item}>{item.title}</Text>\r\n        </TouchableOpacity>    \r\n    </View>\r\n  )\r\n}\r\n\r\nexport default GridItem\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    paddingBottom: 5,\r\n    marginTop: 2,\r\n    marginBottom: 5,\r\n    textAlign: 'center',\r\n    color:'rgb(21, 134, 158)',\r\n    backgroundColor:'rgb(80, 28, 17)'\r\n  }\r\n})","import { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getAuth, setPersistence, browserLocalPersistence } from 'firebase/auth';\r\nimport { REACT_APP_API_KEY, REACT_APP_PROJECT_ID } from '@env'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: REACT_APP_API_KEY,\r\n    authDomain: REACT_APP_PROJECT_ID + '.firebaseapp.com',\r\n    projectId: REACT_APP_PROJECT_ID,\r\n    storageBucket: REACT_APP_PROJECT_ID + \".appspot.com\",\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nexport const db = getFirestore();\r\nexport const auth = getAuth(firebaseApp);\r\n\r\n// Si descomentas la siguiente línea, cuando mientras que el usuario no se desloguee expresamente o cierre el navegador, permanecerá logueado y podremos acceder a su id desde cualquier página\r\nsetPersistence(auth, browserLocalPersistence);","import { collection, getDocs, query, doc, getDoc, addDoc, deleteDoc, updateDoc, where } from \"firebase/firestore\";\r\nimport { db } from '../firebase';\r\n\r\nconst itemsCollection = collection(db, 'categorias');\r\n\r\n// CREATE\r\nexport const createItem= (obj) => {\r\n    return addDoc(itemsCollection, obj).id;\r\n}\r\n\r\n// UPDATE\r\nexport const updateItem = async (id, obj) => {\r\n    await updateDoc(doc(itemsCollection, id), obj)\r\n}\r\n\r\n// READ\r\nexport const getItems= async ()  => {\r\n    const result = await getDocs(query(itemsCollection));\r\n    return getArrayFromCollection(result);\r\n}\r\n\r\n// READ WITH WHERE\r\n// Tener en cuenta que el tipo de dato de la condición debe coincidir con el tipo de dato que hay en Firebase o no obtendré un dato de respuesta\r\nexport const getItemsByCondition = async (value) => {\r\n    const result = await getDocs(query(itemsCollection , where('age', '==', value)));\r\n    const doc = result.docs[0];\r\n    return result.size != 0 ? {...doc.data(), id: doc.id} : {};\r\n}\r\n\r\nexport const getItemById = async (id) => {\r\n    const result = await getDoc(doc(itemsCollection, id));\r\n    return result.data();\r\n}\r\n\r\n// DELETE\r\nexport const deleteItem = async (id) => {\r\n    await deleteDoc(doc(itemsCollection, id));\r\n}\r\n\r\nconst getArrayFromCollection = (collection) => {\r\n    return collection.docs.map(doc => {\r\n        return { ...doc.data(), id: doc.id };\r\n    });\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { FlatList, View } from 'react-native'\r\nimport GridItem from '../components/GridItem'\r\nimport { getItems } from '../app/services/category'\r\n\r\nconst Home = ({ navigation }) => {\r\n  const [prods, setProds] = useState([]);\r\n  useEffect(() => {\r\n    getItems().then((res) => {\r\n      setProds(res);\r\n      console.log(res);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <View>\r\n      <FlatList\r\n      data={prods}\r\n      renderItem={({item}) => <GridItem item={item} navigation={navigation}/>}\r\n      keyExtractor={(item) => item.id}\r\n      ></FlatList>\r\n    </View>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n","export const COLORS = { primary: \"#2D93AD\", secondary: \"#aac0af\" };\r\n","import { collection, getDocs, query, doc, getDoc, addDoc, deleteDoc, updateDoc, where } from \"firebase/firestore\";\r\nimport { db } from '../firebase';\r\n\r\nconst itemsCollection = collection(db, 'productos');\r\n\r\n// CREATE\r\nexport const createItem= (obj) => {\r\n    return addDoc(itemsCollection, obj).id;\r\n}\r\n\r\n// UPDATE\r\nexport const updateItem = async (id, obj) => {\r\n    await updateDoc(doc(itemsCollection, id), obj)\r\n}\r\n\r\n// READ\r\nexport const getItems= async ()  => {\r\n    const result = await getDocs(query(itemsCollection));\r\n    return getArrayFromCollection(result);\r\n}\r\n\r\n// READ WITH WHERE\r\n// Tener en cuenta que el tipo de dato de la condición debe coincidir con el tipo de dato que hay en Firebase o no obtendré un dato de respuesta\r\nexport const getItemsByCondition = async (value) => {\r\n    const result = await getDocs(query(itemsCollection , where('age', '==', value)));\r\n    return getArrayFromCollection(result);\r\n}\r\n\r\nexport const getItemById = async (id) => {\r\n    const result = await getDoc(doc(itemsCollection, id));\r\n    return result.data();\r\n}\r\n\r\n// DELETE\r\nexport const deleteItem = async (id) => {\r\n    await deleteDoc(doc(itemsCollection, id));\r\n}\r\n\r\nconst getArrayFromCollection = (collection) => {\r\n    return collection.docs.map(doc => {\r\n        return { ...doc.data(), id: doc.id };\r\n    });\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FlatList,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport { getItems } from \"../app/services/prods\";\r\n\r\nconst Breads = ({ navigation }) => {\r\n  const [prods, setProds] = useState([]);\r\n  useEffect(() => {\r\n    getItems().then((res) => {\r\n      setProds(res);\r\n      console.log(res);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <View>\r\n        <FlatList\r\n          data={prods}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity onPress={() => navigation.navigate('Details', {id: item.id})}\r\n            >\r\n              <Text style={styles.item}>{item.name}</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          keyExtractor={(item) => item.id }\r\n        />\r\n      </View>        \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Breads;\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    paddingBottom: 5,\r\n    marginTop: 2,\r\n    marginBottom: 5,\r\n    textAlign: \"center\",\r\n    color: \"rgb(21, 134, 158)\",\r\n    backgroundColor: \"rgb(80, 28, 17)\",\r\n  },\r\n});\r\n","import { collection, getDocs, query, doc, getDoc, addDoc, deleteDoc, updateDoc, where } from \"firebase/firestore\";\r\nimport { db } from '../firebase';\r\n\r\nconst itemsCollection = collection(db, 'carrito');\r\n\r\n// CREATE\r\nexport const createItem= (obj) => {\r\n    return addDoc(itemsCollection, obj).id;\r\n}\r\n\r\n// UPDATE\r\nexport const updateItem = async (id, obj) => {\r\n    await updateDoc(doc(itemsCollection, id), obj)\r\n}\r\n\r\n// READ\r\nexport const getItems= async ()  => {\r\n    const result = await getDocs(query(itemsCollection));\r\n    return getArrayFromCollection(result);\r\n}\r\n\r\n// READ WITH WHERE\r\n// Tener en cuenta que el tipo de dato de la condición debe coincidir con el tipo de dato que hay en Firebase o no obtendré un dato de respuesta\r\nexport const getItemsByCondition = async (value) => {\r\n    const result = await getDocs(query(itemsCollection , where('age', '==', value)));\r\n    const doc = result.docs[0];\r\n    return result.size != 0 ? {...doc.data(), id: doc.id} : {};\r\n}\r\n\r\nexport const getItemById = async (id) => {\r\n    const result = await getDoc(doc(itemsCollection, id));\r\n    return result.data();\r\n}\r\n\r\n// DELETE\r\nexport const deleteItem = async (id) => {\r\n    await deleteDoc(doc(itemsCollection, id));\r\n}\r\n\r\nconst getArrayFromCollection = (collection) => {\r\n    return collection.docs.map(doc => {\r\n        return { ...doc.data(), id: doc.id };\r\n    });\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\r\nimport { getItemById } from '../app/services/prods'\r\nimport { createItem, getItems } from '../app/services/cart'\r\nimport { AppContext } from '../app/Provider'\r\n\r\nconst Details = ({route}) => {\r\n  const [prods, setProds] = useState([]);\r\n  const [state, setState] = useContext(AppContext);\r\n  useEffect(() => {\r\n    getItemById(route.params.id).then((res) => {\r\n      setProds(res);\r\n    });\r\n  }, []);\r\n\r\n  const addToCart = () => {\r\n    createItem(prods);\r\n    getItems().then((res) => {\r\n      const obj = res;\r\n      console.log(obj);\r\n      setState({...state, items: obj})\r\n    }) \r\n  }\r\n\r\n  return (\r\n    <>\r\n    <View style={styles.context}>\r\n      <Text style={styles.item}>\r\n        {prods.name}\r\n      </Text>\r\n      <Text style={styles.item}>\r\n        ${prods.price}\r\n      </Text>\r\n    </View>\r\n    <TouchableOpacity onPress={addToCart}><Text style={styles.agregar}>Agregar al carrito</Text></TouchableOpacity>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Details\r\n\r\nconst styles = StyleSheet.create({\r\n  context: {\r\n    paddingBottom: 5,\r\n    marginTop: 2,\r\n    marginBottom: 5,\r\n    textAlign: 'center',\r\n    backgroundColor:'rgb(80, 28, 17)'\r\n  }, item:{\r\n    color:'rgb(21, 134, 158)' \r\n  }, agregar: {\r\n    paddingBottom: 5,\r\n    marginTop: 2,\r\n    marginBottom: 5,\r\n    textAlign: \"center\",\r\n    color: \"rgb(80, 28, 17)\",\r\n    backgroundColor: \"rgb(21, 134, 158)\",\r\n  }\r\n})","import { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from \"firebase/auth\";\r\nimport { setDoc } from \"firebase/firestore\";\r\nimport { auth } from \"../firebase\";\r\n\r\nexport const signUp = async (email, password) => {\r\n    return createUserWithEmailAndPassword(auth, email, password).then(async (userCredential) => {\r\n        const user = userCredential.user;\r\n        await setDoc(doc(db, 'users', user.uid),{});\r\n        return user.uid;\r\n    })\r\n}\r\n\r\nexport const signIn = async (email, password) => {\r\n        const result = await signInWithEmailAndPassword(auth, email, password);\r\n        return result.user.uid;\r\n}\r\n\r\nexport const getCurrentUserId = async () => await auth.currentUser?.uid;\r\nexport const logout = async () => await signOut(auth);","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Home from '../screens/Home';\r\nimport { COLORS } from '../constants/colors';\r\nimport Breads from '../screens/Breads';\r\nimport Details from '../screens/Details';\r\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\r\nimport { logout } from '../app/services/api';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default () => (\r\n    <Stack.Navigator\r\n        screenOptions={{\r\n            headerShown:true,\r\n            headerStyle:{\r\n                backgroundColor: COLORS.primary\r\n            },\r\n            headerTintColor: COLORS.secondary,\r\n            headerTitleStyle: {\r\n                fontWeight: 'bold'\r\n            }, headerRight: (props) => (\r\n                <TouchableOpacity onPress={logout}>\r\n                    <Text style={styles.titleHeader}>\r\n                        Log Out\r\n                    </Text>\r\n                </TouchableOpacity>\r\n            )\r\n    }}\r\n    >\r\n        <Stack.Screen name=\"Home\" component={Home} />\r\n        <Stack.Screen name=\"Breads\" component={Breads} />\r\n        <Stack.Screen name=\"Details\" component={Details} />\r\n        \r\n    </Stack.Navigator>\r\n);\r\n\r\nexport const styles = StyleSheet.create({\r\n    titleHeader: {\r\n        color: COLORS.secondary\r\n    }\r\n})","import { collection, getDocs, query, doc, getDoc, addDoc, deleteDoc, updateDoc, where } from \"firebase/firestore\";\r\nimport { db } from '../firebase';\r\n\r\nconst itemsCollection = collection(db, 'orders');\r\n\r\n// CREATE\r\nexport const createItem= (obj) => {\r\n    return addDoc(itemsCollection, obj).id;\r\n}\r\n\r\n\r\n// UPDATE\r\nexport const updateItem = async (id, obj) => {\r\n    await updateDoc(doc(itemsCollection, id), obj)\r\n}\r\n\r\n// READ\r\nexport const getItems= async ()  => {\r\n    const result = await getDocs(query(itemsCollection));\r\n    return getArrayFromCollection(result);\r\n}\r\n\r\n// READ WITH WHERE\r\n// Tener en cuenta que el tipo de dato de la condición debe coincidir con el tipo de dato que hay en Firebase o no obtendré un dato de respuesta\r\nexport const getItemsByCondition = async (value) => {\r\n    const result = await getDocs(query(itemsCollection , where('age', '==', value)));\r\n    const doc = result.docs[0];\r\n    return result.size != 0 ? {...doc.data(), id: doc.id} : {};\r\n}\r\n\r\nexport const getItemById = async (id) => {\r\n    const result = await getDoc(doc(itemsCollection, id));\r\n    return result.data();\r\n}\r\n\r\n// DELETE\r\nexport const deleteItem = async (id) => {\r\n    await deleteDoc(doc(itemsCollection, id));\r\n}\r\n\r\nconst getArrayFromCollection = (collection) => {\r\n    return collection.docs.map(doc => {\r\n        return { ...doc.data(), id: doc.id };\r\n    });\r\n}","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  FlatList,\r\n  Modal,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport { AppContext } from \"../app/Provider\";\r\nimport { deleteItem, getItems } from \"../app/services/cart\";\r\nimport { createItem } from \"../app/services/orders\";\r\n\r\nconst Cart = () => {\r\n  const [itemSelected, setItemSelected] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [state, setState] = useContext(AppContext);\r\n\r\n  function allDeleteCart(){\r\n    getItems().then((res) => {\r\n      res.map(r => deleteItem(r.id))\r\n    })\r\n  } \r\n\r\n  const addOrder = () => {\r\n    createItem({ items: state.items, user: state.user, total: sumProds() });\r\n    setState({...state, items: []})\r\n    alert(\"Se realizo su compra con exito, muchas gracias por elegirnos\");\r\n    allDeleteCart()\r\n  };\r\n\r\n  function sumProds() {\r\n    let suma = 0;\r\n    state.items.map((p) => (suma += parseInt(p.price)));\r\n    return suma;\r\n  }\r\n\r\n  const onHandlerDelete = () => {\r\n    deleteItem(itemSelected.id);\r\n    setItemSelected({});\r\n    setModalVisible(false);\r\n    getItems().then((res) => {\r\n      setState({ ...state, items: res });\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View>\r\n        <FlatList\r\n          data={state.items}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setItemSelected(item);\r\n                setModalVisible(true);\r\n              }}\r\n            >\r\n              <Text style={styles.item}>{item.name}</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          keyExtractor={(item) => item.id}\r\n        />\r\n\r\n        <Modal visible={modalVisible} animationType=\"slide\" transparent=\"false\">\r\n          <View style={styles.modalView}>\r\n            <TouchableOpacity onPress={onHandlerDelete}>\r\n              <Text>borrar</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={closeModal}>\r\n              <Text>volver</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </Modal>\r\n        <Text style={styles.total} key={\"total\"}>\r\n          Total: ${sumProds()}\r\n        </Text>\r\n        <TouchableOpacity onPress={addOrder}>\r\n          <Text>Realizar compra</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n\r\nconst styles = StyleSheet.create({\r\n  modalView: {\r\n    width: 200,\r\n    height: 100,\r\n    borderRadius: 25,\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n    marginLeft: 40,\r\n    marginRight: 40,\r\n    backgroundColor: \"rgb(21, 134, 158)\",\r\n    color: \"rgb(80, 28, 17)\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  item: {\r\n    paddingBottom: 5,\r\n    marginTop: 2,\r\n    marginBottom: 5,\r\n    textAlign: \"center\",\r\n    color: \"rgb(21, 134, 158)\",\r\n    backgroundColor: \"rgb(80, 28, 17)\",\r\n  },\r\n  total: {\r\n    paddingBottom: 5,\r\n    marginTop: 2,\r\n    marginBottom: 5,\r\n    textAlign: \"center\",\r\n    color: \"rgb(80, 28, 17)\",\r\n    backgroundColor: \"rgb(21, 134, 158)\",\r\n  },\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FlatList,\r\n  Modal,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport { getItems, createItem, deleteItem, updateItem } from \"../app/services/prods\";\r\n\r\nconst Edit = () => {\r\n  const [category, setCategory] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [itemSelected, setItemSelected] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const onHandlerDelete = () => {\r\n    deleteItem(itemSelected.id);\r\n    setItemSelected({});\r\n    setModalVisible(false);\r\n    getItems().then((res) => {\r\n      setProds(res);\r\n    });\r\n  };\r\n\r\n  const addProd = () => {\r\n    createItem({\r\n      category: category,\r\n      name: name,\r\n      description: description,\r\n      weight: weight,\r\n      price: price,\r\n    });\r\n    getItems().then((res) => {\r\n      setProds(res);\r\n    });\r\n  };\r\n\r\n  const [prods, setProds] = useState([]);\r\n  useEffect(() => {\r\n    getItems().then((res) => {\r\n      setProds(res);\r\n      console.log(res);\r\n    });\r\n  }, []);\r\n\r\n  const closeModal = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const editProd = () => {\r\n    updateItem(itemSelected.id, {\r\n      category: category,\r\n      name: name,\r\n      description: description,\r\n      weight: weight,\r\n      price: price,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <View>\r\n        <Text> productos ya cargados </Text>\r\n        <FlatList\r\n          data={prods}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                setItemSelected(item);\r\n                setModalVisible(true);\r\n              }}\r\n            >\r\n              <Text style={styles.item}>{item.name}</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          keyExtractor={(item) => item.id}\r\n        />\r\n        <Modal visible={modalVisible} animationType=\"slide\" transparent=\"true\">\r\n          <View style={styles.modalView}>\r\n            <TouchableOpacity onPress={onHandlerDelete}>\r\n              <Text>\r\n                borrar\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={editProd}>\r\n              <Text>\r\n                editar\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={closeModal}>\r\n              <Text>\r\n                volver\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n\r\n      <View>\r\n        <Text>\r\n          <TextInput\r\n            placeholder=\"category\"\r\n            onChange={(text) => setCategory(text.target.value)}\r\n          />\r\n          <TextInput\r\n            placeholder=\"name\"\r\n            onChange={(text) => setName(text.target.value)}\r\n          />\r\n          <TextInput\r\n            placeholder=\"description\"\r\n            onChange={(text) => setDescription(text.target.value)}\r\n          />\r\n          <TextInput\r\n            placeholder=\"weight\"\r\n            onChange={(text) => setWeight(text.target.value)}\r\n          />\r\n          <TextInput\r\n            placeholder=\"price\"\r\n            onChange={(text) => setPrice(text.target.value)}\r\n          />\r\n          <TouchableOpacity onPress={addProd}>\r\n            <Text>\r\n              Agregar producto\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </Text>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n\r\nconst styles = StyleSheet.create({\r\n  modalView: {\r\n    width: 200,\r\n    height: 100,\r\n    borderRadius: 25,\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n    marginLeft: 40,\r\n    marginRight: 40,\r\n    backgroundColor: \"rgb(21, 134, 158)\",\r\n    color: \"rgb(80, 28, 17)\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n  }, item: {\r\n      paddingBottom: 5,\r\n      marginTop: 2,\r\n      marginBottom: 5,\r\n      textAlign: \"center\",\r\n      color: \"rgb(21, 134, 158)\",\r\n      backgroundColor: \"rgb(80, 28, 17)\",\r\n    }\r\n});\r\n","import React, { useState } from 'react'\r\nimport { StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport { signUp } from '../app/services/api'\r\n\r\nconst Register = ({navigation}) => {\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n\r\n  return (\r\n    <>\r\n    <View>\r\n        <TextInput style={styles.input} onChangeText={(text) => setEmail(text)} placeholder={'escriba su cuenta'} />\r\n        <TextInput style={styles.input} onChangeText={(text) => setPassword(text)} placeholder={'escriba su contraseña'}/>\r\n        <TouchableOpacity style={styles.boton} onPress={async () => {\r\n                await signUp(email, password)\r\n                navigation.navigate('Login');\r\n                }\r\n            }>\r\n            <Text style={styles.text}>\r\n                Registrar\r\n            </Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity style={styles.boton} onPress={async() =>{\r\n                navigation.navigate('Login');\r\n                }\r\n            }>\r\n            <Text style={styles.text}>\r\n                ir a login\r\n            </Text>\r\n        </TouchableOpacity>\r\n    </View>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n        borderWidth: 1,\r\n        borderColor:'#000',\r\n        padding: 10,\r\n        margin: 10,\r\n        borderRadius: 5\r\n    }, \r\n    boton: {\r\n        backgroundColor: '#000',\r\n        padding: 10,\r\n        margin: 10,\r\n        borderRadius: 5\r\n    }, \r\n    text: {\r\n        color: 'white'\r\n    }\r\n})","import React, { useState } from 'react'\r\nimport { StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport { signIn } from '../app/services/api'\r\n\r\nconst Access = () => {\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n\r\n\r\n  return (\r\n    <>\r\n    <View>\r\n        <TextInput style={styles.input} onChangeText={(text) => setEmail(text)} placeholder={'escriba su cuenta'} />\r\n        <TextInput style={styles.input} onChangeText={(text) => setPassword(text)} placeholder={'escriba su contraseña'}/>\r\n        <TouchableOpacity style={styles.boton} onPress={async() => {\r\n                await signIn(email, password)\r\n                }\r\n            }>\r\n            <Text style={styles.text}>\r\n                Login\r\n            </Text>\r\n        </TouchableOpacity>\r\n    </View>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Access\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n        borderWidth: 1,\r\n        borderColor:'#000',\r\n        padding: 10,\r\n        margin: 10,\r\n        borderRadius: 5\r\n    }, \r\n    boton: {\r\n        backgroundColor: '#000',\r\n        padding: 10,\r\n        margin: 10,\r\n        borderRadius: 5\r\n    }, \r\n    text: {\r\n        color: 'white'\r\n    }\r\n})","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { COLORS } from '../constants/colors';\r\nimport Register from '../screens/Register';\r\nimport Access from '../screens/Access';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default () => (\r\n    <Stack.Navigator\r\n        screenOptions={{\r\n            headerShown:false,\r\n            headerStyle:{\r\n                backgroundColor: COLORS.primary\r\n            },\r\n            headerTintColor: COLORS.secondary,\r\n            headerTitleStyle: {\r\n                fontWeight: 'bold'\r\n            }\r\n    }}\r\n    >\r\n        <Stack.Screen name=\"Register\" component={Register} /> \r\n        <Stack.Screen name=\"Login\" component={Access} />        \r\n\r\n    </Stack.Navigator>\r\n);","import React from 'react';\r\nimport Home from '../stacks/index';\r\nimport Cart from '../screens/Cart';\r\nimport Edit from '../screens/Edit';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport auth from '../stacks/auth';\r\nimport { logout } from '../app/services/api';\r\nimport { COLORS } from '../constants/colors';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default () => (\r\n    <Tab.Navigator>\r\n        <Tab.Screen name=\"Home\" component={Home}\r\n            options={{\r\n                title: 'shop',\r\n                headerShown: false,\r\n                tabBarShowLabel: false,\r\n                tabBarStyle: styles.tabBar,\r\n                headerStyle: styles.header,\r\n                headerRight: (props) => (\r\n                    <TouchableOpacity onPress={logout}>\r\n                        <Text style={styles.titleHeader}>\r\n                            Log Out\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                ),\r\n                tabBarIcon: () => \r\n                <View>\r\n                    <Ionicons name=\"home\" size={30} color=\"#rgb(21, 134, 158)\"/>\r\n                    <Text style={styles.title}>Home</Text>\r\n                </View>\r\n            }}\r\n        />\r\n        <Tab.Screen name='Cart' component={Cart}\r\n            options={{\r\n                title: 'Cart',\r\n                headerShown: true,\r\n                tabBarShowLabel:false,\r\n                tabBarStyle: styles.tabBar,\r\n                headerStyle:{\r\n                    backgroundColor: COLORS.primary\r\n                },\r\n                headerTintColor: COLORS.secondary,\r\n                headerTitleStyle: {\r\n                    fontWeight: 'bold'\r\n                },\r\n                headerRight: (props) => (\r\n                    <TouchableOpacity onPress={logout}>\r\n                        <Text style={styles.titleHeader}>\r\n                            Log Out\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                ),\r\n                tabBarIcon: () => \r\n                <View>\r\n                    <Ionicons name=\"cart\" size={30} color=\"#rgb(21, 134, 158)\"/>\r\n                    <Text style={styles.title}>Cart</Text>\r\n                </View>\r\n            }}\r\n        />      \r\n        <Tab.Screen name='Edit' component={Edit}\r\n            options={{\r\n                title: 'edit',\r\n                headerShown: true,\r\n                tabBarShowLabel:false,\r\n                tabBarStyle: styles.tabBar,\r\n                headerStyle:{\r\n                    backgroundColor: COLORS.primary\r\n                },\r\n                headerTintColor: COLORS.secondary,\r\n                headerTitleStyle: {\r\n                    fontWeight: 'bold'\r\n                },\r\n                headerRight: (props) => (\r\n                    <TouchableOpacity onPress={logout}>\r\n                        <Text style={styles.titleHeader}>\r\n                            Log Out\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                ),\r\n                tabBarIcon: () => \r\n                <View>\r\n                    <AntDesign name=\"edit\" size={30} color=\"#rgb(21, 134, 158)\"/>\r\n                    <Text style={styles.title}>Edit</Text>\r\n                </View>\r\n            }}\r\n        />\r\n        <Tab.Screen name='Auth' component={auth}\r\n            options={{\r\n                title: 'auth',\r\n                headerShown: true,\r\n                tabBarShowLabel:false,\r\n                tabBarStyle: styles.tabBar,\r\n                headerStyle:{\r\n                    backgroundColor: COLORS.primary\r\n                },\r\n                headerTintColor: COLORS.secondary,\r\n                headerTitleStyle: {\r\n                    fontWeight: 'bold'\r\n                },\r\n                headerRight: (props) => (\r\n                    <TouchableOpacity onPress={logout}>\r\n                        <Text style={styles.titleHeader}>\r\n                            Log Out\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                ),\r\n                tabBarIcon: () => \r\n                <View>\r\n                    <MaterialCommunityIcons name=\"account\" size={30} color=\"#rgb(21, 134, 158)\"/>\r\n                    <Text style={styles.title}>Account</Text>\r\n                </View>\r\n            }}\r\n        />            \r\n    </Tab.Navigator>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n    tabBar: {\r\n        backgroundColor:\"#rgb(80, 28, 17)\",\r\n        shadowColor: \"#rgb(80, 28, 17)\",\r\n        shadowOpacity: 0.5,\r\n        shadowOffset: {width: 0, height: 10},\r\n        elevation:5,\r\n        position:'absolute',\r\n        bottom:25,\r\n        left:20,\r\n        right:20,\r\n        borderRadius:15,\r\n        height:90\r\n    }, title: {\r\n        color: 'rgb(21, 134, 158)',\r\n        textAlign: 'center',\r\n        paddingTop: 5\r\n    }, titleHeader: {\r\n        color: COLORS.secondary\r\n    }\r\n})","import React, { useContext, useEffect, useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport Main from '../tabs/';\r\nimport { auth } from '../app/firebase';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport AuthNavigator from '../stacks/auth';\r\nimport { AppContext } from '../app/Provider';\r\nimport { getItems } from '../app/services/cart';\r\n\r\nconst Nav = () => {\r\n    const [isLogged, setIsLogged] = useState(false);\r\n    const [state, setState] = useContext(AppContext);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, (user) => {\r\n            if(user){\r\n                setIsLogged(true);\r\n                getItems().then((res) => {\r\n                    setState({items: res, user: user.email});\r\n                })\r\n                console.log('user is logged');\r\n                console.log(user);\r\n            } else (\r\n                setIsLogged(false)\r\n            )\r\n        })\r\n    }, [])\r\n    return(\r\n        <NavigationContainer>\r\n        {\r\n            isLogged ? <Main/> : <AuthNavigator/> \r\n        }\r\n        </NavigationContainer>\r\n        )\r\n    }\r\nexport default Nav ","// import { useState } from 'react';\n// import { StyleSheet, Text, View, TextInput, Button, FlatList, TouchableOpacity, Modal } from 'react-native';\n// import ModalMio from './components/Modal';\n\nimport Provider from \"./src/app/Provider\";\nimport Navigation from \"./src/navigation\";\n\n// export default function App() {\n//   const data = [\n//     {'id': 1, 'name': 'fede'},\n//     {'id': 2, 'name': 'javier'},\n//     {'id': 3, 'name': 'pochi'},\n//     {'id': 4, 'name': 'tenienteDan'}\n//   ]\n//   const [itemList, setItemList] = useState(data)\n//   const [textItem, setTextItem] = useState('')\n  \n//   const [itemSelected, setItemSelected] = useState(false);\n//   const [modalVisible, setModalVisible] = useState(false);\n\n\n\n//   const add = () => setItemList([...itemList, {id:itemList.length+1, name:textItem}])\n\n//   const onHandlerDelete = () => {\n//     setItemList(itemList.filter(item => item.id != itemSelected.id));\n//     setItemSelected({})\n//     setModalVisible(false);\n//   }\n\n//   const onHandlerSelected = () =>{\n//     alert('algo');\n//   }\n\n\n//   return (\n//     <View style={styles.container}>\n//       <View style={styles.viewBtn}>\n//       <TextInput style={styles.input} placeholder='escriba aqui' onChangeText={text => setTextItem(text)}\n//       value={textItem}/>\n//       <TouchableOpacity style={styles.textButton} onPress={add}><Text>+</Text></TouchableOpacity>\n//       </View>\n      \n//       <View>\n//         <FlatList \n//           data={itemList}\n//           renderItem={({item}) => <TouchableOpacity onPress={() => {\n//             setItemSelected(item);\n//             setModalVisible(true);\n//           }}><Text>{item.name}</Text></TouchableOpacity>}\n//           keyExtractor={item => item.id.toString()}\n//         />\n//         <Modal visible={modalVisible} animationType='slide'>\n//           <View>\n//             <TouchableOpacity onPress={onHandlerDelete}>borrar</TouchableOpacity>\n//           </View>\n//         </Modal>\n\n//         {/* <ModalMio>\n\n//         </ModalMio> */}\n//       </View>\n//     </View>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     flexDirection:'column',\n//     backgroundColor: 'salmon',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   }, viewBtn:{\n//     flexDirection:'row'\n//   },\n//   textButton: {\n//     color: 'white',\n//     fontSize: 12,\n//     backgroundColor: 'blue',\n//     textAlign: 'center',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//     width: 30,\n//     height: 30\n//   },\n//   input: {\n//     borderColor: 'black',\n//     borderWidth: 5\n//   }\n// });\n\n\nconst App = () => <Provider><Navigation/></Provider>\nexport default App;"],"sourceRoot":""}